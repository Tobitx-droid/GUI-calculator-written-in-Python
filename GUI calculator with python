import tkinter as tk #This is the only module we are going to use because
                     # it is the most commonly used library for GUI 
                     # development in Python

calculation = ""  #this calculation string is empty at first

#We then have 3 functions as shown below...

def add_to_calculation(symbol): #1st function
    #pass  
    """The pass statement does not do anything and it is used when 
            the user does not know what code to write. Note that the 
            pass statement is later cleaned for real work to commence"""
    global calculation #We are setting the string as global in here
    calculation += str(symbol) #In here we typecast the symbol variable
                    #whatever it maybe into a string so that it can be
                    #added to the string variable calculation

    text_result.delete(1.0, "end") #In this code we delete whatever is in
                        #the text_result field and this is done by specifying
                        #the deletion should start from the 1st point (1.0) to
                        #the end of the text_result field

    text_result.insert(1.0, calculation)#In this code we insert our 
                        #calculations being made into the text_result field
                        #as parameters to the insert method we have the
                        #first index of the text_field as 1.0 and then
                        #the calculation being inserted.




def evaluate_calculation(): #This fn does the necessary eval calculation
    #pass                   #and do the necessary tk inter operations
    global calculation
    try:
        calculation = str(eval(calculation)) #The eval() function is for performing
                                        #calculations but NOTE that it can also
                                        #evaluate python code and if used in an
                                        #online function anyone can type a 
                                        #python code which would be evaluated to 
                                        #cause harm or do what they wish to do to 
                                        #you
        text_result.delete(1.0, "end")
        text_result.insert(1.0, calculation)
        

    except:
        clear_field()
        text_result.insert(1.0, "Error")


def clear_field():     #This function just clears the text_result field
    global calculation
    calculation = ""
    text_result.delete(1.0, "end")


#We are now going to design the Graphical User Interface in which we would
# do our calculations

root = tk.Tk() #this code creates an object which uses the function Tk()
               # which exist only in the tkinter library which has been 
               # called as tk in our code

root.geometry("300x275") #This gives the dimension of the GUI

text_result = tk.Text(root, height=2, width=16, font=("Arial",24))
#The above is creating a text field of the result. This text field would
#be part of root,have a height, width and font.

text_result.grid(columnspan=5) #The grid function exists in the tkinter
                    #library and it's one of the easiest ways to build a
                    #grid

                    #NOTE that the functions address the text field and 
                    #not the buttons which are the grid

#Now we are creating all the individual buttons
btn_1 = tk.Button(root, text="1", command=lambda : add_to_calculation(1), width=5, font=("Arial",14))   
                                    #Note that directly above, an anonymous function is used known as the lambda function. It's just a throwaway function we would use only once plus when you hide a function call in a button as we have done you need an anonymous function to call it otherwise you won't be able to use the function. We use it when we specifically want to pass parameters into the function and run the function but when you don't want to pass any parameters into the function but only call the function you can use the function name and not bring the parameters as the parameters may suggest you are passing null arguments into the function.              
btn_1.grid(row=2, column=1)

btn_2 = tk.Button(root, text="2", command=lambda : add_to_calculation(2), width=5, font=("Arial",14))   
btn_2.grid(row=2, column=2)

btn_3 = tk.Button(root, text="3", command=lambda : add_to_calculation(3), width=5, font=("Arial",14))   
btn_3.grid(row=2, column=3)

btn_4 = tk.Button(root, text="4", command=lambda : add_to_calculation(4), width=5, font=("Arial",14))   
btn_4.grid(row=3, column=1)

btn_5 = tk.Button(root, text="5", command=lambda : add_to_calculation(5), width=5, font=("Arial",14))   
btn_5.grid(row=3, column=2)

btn_6 = tk.Button(root, text="6", command=lambda : add_to_calculation(6), width=5, font=("Arial",14))   
btn_6.grid(row=3, column=3)

btn_7 = tk.Button(root, text="7", command=lambda : add_to_calculation(7), width=5, font=("Arial",14))   
btn_7.grid(row=4, column=1)

btn_8 = tk.Button(root, text="8", command=lambda : add_to_calculation(8), width=5, font=("Arial",14))   
btn_8.grid(row=4, column=2)

btn_9 = tk.Button(root, text="9", command=lambda : add_to_calculation(9), width=5, font=("Arial",14))   
btn_9.grid(row=4, column=3)

btn_0 = tk.Button(root, text="0", command=lambda : add_to_calculation(0), width=5, font=("Arial",14))   
btn_0.grid(row=5, column=2)

btn_plus = tk.Button(root, text="+", command=lambda : add_to_calculation("+"), width=5, font=("Arial",14))   
btn_plus.grid(row=2, column=4)

btn_minus = tk.Button(root, text="-", command=lambda : add_to_calculation("-"), width=5, font=("Arial",14))   
btn_minus.grid(row=3, column=4)

btn_mul = tk.Button(root, text="*", command=lambda : add_to_calculation("*"), width=5, font=("Arial",14))   
btn_mul.grid(row=4, column=4)

btn_div = tk.Button(root, text="/", command=lambda : add_to_calculation("/"), width=5, font=("Arial",14))   
btn_div.grid(row=5, column=4)

btn_open = tk.Button(root, text="(", command=lambda : add_to_calculation("("), width=5, font=("Arial",14))   
btn_open.grid(row=5, column=1)

btn_close = tk.Button(root, text=")", command=lambda : add_to_calculation(")"), width=5, font=("Arial",14))   
btn_close.grid(row=5, column=3)

btn_equals = tk.Button(root, text="=", command=evaluate_calculation, width=11, font=("Arial",14))   
btn_equals.grid(row=6, column=3, columnspan=2)

btn_clear = tk.Button(root, text="C", command=clear_field, width=11, font=("Arial",14))   
btn_clear.grid(row=6, column=1, columnspan=2)

root.mainloop() #This is in the Tkinter library and it's an infinite loop
                #of the GUI. The app window(GUI) is like a frame that keeps
                #on destroying every microsecond but the main loop keeps on 
                #creating a new updated window. This process of destroying 
                #old window screens and creating a new one happens so fast that
                #human eyes don't even realize it.

